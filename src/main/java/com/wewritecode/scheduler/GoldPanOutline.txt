***** Outline for how the GoldPan utility should operate *****


class: RequestController
    see cs48-post-diagram.svg for details

Algorithm
    Preconditions:
        - RequestParser has mapped the POST request into two JSON objects:
            - baseSchedule.json
                - Includes lectures/sections that MUST be present in any generated schedule, as including the course
                  leaves only the one option for the lecture or section.
            - schedulePan.json
                - Includes courses with lecture/sections that have more than one option.
            * Note: baseSchedule.json and schedulePan.json MUST be independent of each other. If there is a lecture
              in baseSchedule.json for a specific course, that lecture must NOT present in schedulePan.json
        - No exceptions have been thrown up to this point.

    Setup:
        -


RequestController (com.wewritecode.server)
- Entry point of POST request.
- Calls appropriate functions for parsing different POSTs.


RequestParser (com.wewritecode.server)
- Parses POST JSONObject into class objects.


GoldPan (com.wewritecode.scheduler)
- Find non-conflicting schedules.
- Filter based on filter options (if any).





RC  ->  + GoldPan pan = new GoldPan()
RC  ->  + pan.parsePOST()
            - parseCourses()
                - addToBase()
                - addToPan()
            - parseFilters()

RequestController  ->  ScheduleManager  ->  generateSchedules()